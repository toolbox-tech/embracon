name: Java CI  # Nome do workflow exibido no GitHub

on: [pull_request, workflow_dispatch, push]  # Dispara em pull requests ou execução manual

jobs:

   gitleaks:  # Job chamado 'gitleaks'
    uses: ./.github/workflows/gitleaks.yml  # Usa um workflow reutilizável local
    with:
      gitleaks-version: 'latest'  # Passa a versão do Gitleaks como parâmetro
    secrets:
      TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Token padrão do GitHub para autenticação
      LICENSE: ${{ secrets.GITLEAKS_LICENSE }}  # Licença do Gitleaks (necessária para organizações)

   build:
    uses: ./.github/workflows/build.yml  # Usa um workflow reutilizável local para construir a imagem Docker
    with:
      app_context: 'app/java'  # Caminho para o contexto da aplicação Java
      app_tags: 'toolboxplayground/embracon:java-latest,toolboxplayground/embracon:java'  # Tags para a imagem Docker
    needs: gitleaks  # Garante que o job 'gitleaks' seja concluído antes de executar este job

   trivy:  # Executa o Trivy para escanear a imagem Docker
    uses: ./.github/workflows/trivy.yml  # Usa um workflow reutilizável para o Trivy
    needs: build  # Garante que o job 'build' seja concluído antes de executar este job
    with:
      docker_image: toolboxplayground/embracon:java-latest  # Especifica a imagem Docker a ser escaneada