name: Java CI  # Nome do workflow exibido no GitHub

on: [pull_request, workflow_dispatch, push]  # Dispara em pull requests ou execução manual

jobs:

   gitleaks:  # Job chamado 'gitleaks'
    uses: ./.github/workflows/reusable.yml  # Usa um workflow reutilizável local
    with:
      gitleaks-version: 'latest'  # Passa a versão do Gitleaks como parâmetro
    secrets:
      TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Token padrão do GitHub para autenticação
      LICENSE: ${{ secrets.GITLEAKS_LICENSE }}  # Licença do Gitleaks (necessária para organizações)

   build:
    runs-on: ubuntu-latest
    needs: gitleaks  # Garante que o job 'gitleaks' seja concluído antes de executar este job

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Cache Maven dependencies
      #   uses: ./.github/actions/cache-deps  # Usa uma ação personalizada para cache
      #   with:
      #     language: java  # Especifica que é para Java

      # - name: Build with Maven
      #   working-directory: app/java
      #   run: mvn clean package -DskipTests  # Executa o Maven para limpar e empacotar o projeto, pulando os testes

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
            username: ${{ vars.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: app/java  # Define o contexto de construção do Docker
          push: true  # Faz push da imagem para um registro
          # load: true  # Carrega a imagem no ambiente atual
          tags: toolboxplayground/embracon:java-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  #  trivy:  # Executa o Trivy para escanear a imagem Docker
  #   uses: ./.github/workflows/trivy.yml  # Usa um workflow reutilizável para o Trivy
  #   needs: build  # Garante que o job 'build' seja concluído antes de executar este job
  #   with:
  #     docker_image: toolboxplayground/embracon:java-latest  # Especifica a imagem Docker a ser escaneada