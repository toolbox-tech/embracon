# üîê Service Account para acesso exclusivo ao namespace DEV
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dev-namespace-user
  namespace: dev
  labels:
    app: kubernetes-dashboard
    component: dev-access
    environment: development
---
# üõ°Ô∏è Role com permiss√µes limitadas ao namespace DEV
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: dev-namespace-role
  namespace: dev
  labels:
    app: kubernetes-dashboard
    component: dev-access
    environment: development
rules:
# Permiss√µes para recursos b√°sicos
- apiGroups: [""]
  resources:
    - pods
    - pods/log
    - pods/status
    - services
    - endpoints
    - configmaps
    - secrets
    - persistentvolumeclaims
    - events
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Permiss√µes para deployments e replicasets
- apiGroups: ["apps"]
  resources:
    - deployments
    - replicasets
    - daemonsets
    - statefulsets
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Permiss√µes para networking
- apiGroups: ["networking.k8s.io"]
  resources:
    - ingresses
    - networkpolicies
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Permiss√µes para autoscaling
- apiGroups: ["autoscaling"]
  resources:
    - horizontalpodautoscalers
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Permiss√µes para batch jobs
- apiGroups: ["batch"]
  resources:
    - jobs
    - cronjobs
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Permiss√µes para m√©tricas (somente leitura)
- apiGroups: ["metrics.k8s.io"]
  resources:
    - pods
    - nodes
  verbs: ["get", "list"]

# ‚ùå EXPLICITAMENTE NEGADO: Acesso a outros namespaces
# Esta Role s√≥ funciona no namespace 'dev' - n√£o pode acessar:
# - default, kube-system, kube-public
# - kubernetes-dashboard, ingress-nginx
# - Qualquer outro namespace

---
# üîó RoleBinding para associar Service Account √† Role
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: dev-namespace-binding
  namespace: dev
  labels:
    app: kubernetes-dashboard
    component: dev-access
    environment: development
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dev-namespace-role
subjects:
- kind: ServiceAccount
  name: dev-namespace-user
  namespace: dev

---
# üìã Secret para token de longa dura√ß√£o (opcional)
apiVersion: v1
kind: Secret
metadata:
  name: dev-namespace-user-token
  namespace: dev
  labels:
    app: kubernetes-dashboard
    component: dev-access
    environment: development
  annotations:
    kubernetes.io/service-account.name: "dev-namespace-user"
type: kubernetes.io/service-account-token
